document.addEventListener("DOMContentLoaded", function () {
    let map, placemark;

    const cityCenters = {
        "–ê–ª–º–∞—Ç—ã": [43.238949, 76.889709],
        "–ê—Å—Ç–∞–Ω–∞": [51.169392, 71.449074],
        "–ö–æ—Å—Ç–∞–Ω–∞–π": [53.219913, 63.624630],
        "–®—ã–º–∫–µ–Ω—Ç": [42.341731, 69.590099],
        "–ê–∫—Ç–∞—É": [43.651070, 51.153300],
        "–ê–∫—Ç–æ–±–µ": [50.283937, 57.166978],
        "–ê—Ç—ã—Ä–∞—É": [47.094495, 51.923771],
        "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞": [49.806066, 73.085358],
        "–ö–æ–∫—à–µ—Ç–∞—É": [53.294822, 69.404787],
        "–ö—ã–∑—ã–ª–æ—Ä–¥–∞": [44.848831, 65.482267],
        "–ü–∞–≤–ª–æ–¥–∞—Ä": [52.287054, 76.967928],
        "–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫": [54.877876, 69.140651],
        "–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω": [45.015245, 78.375034],
        "–¢–∞—Ä–∞–∑": [42.899879, 71.377946],
        "–£—Ä–∞–ª—å—Å–∫": [51.230942, 51.386524],
        "–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫": [49.948235, 82.615358],
        "–¢–µ–º–∏—Ä—Ç–∞—É": [50.054938, 72.959289],
        "–†–∏–¥–¥–µ—Ä": [50.344848, 83.512650],
        "–†—É–¥–Ω—ã–π": [52.964454, 63.133419],
        "–ñ–µ–∑–∫–∞–∑–≥–∞–Ω": [47.803837, 67.707956],
        "–°–∞—Ç–ø–∞–µ–≤": [47.881482, 67.540070],
        "–ë–∞–ª—Ö–∞—à": [46.844658, 75.996928],
        "–ö–µ–Ω—Ç–∞—É": [43.520079, 68.512026],
        "–®–∞—Ö—Ç–∏–Ω—Å–∫": [49.701231, 72.591820],
        "–°–∞—Ä–∞–Ω—å": [49.790466, 72.805327],
        "–©—É—á–∏–Ω—Å–∫": [52.934115, 70.189818],
        "–ê–∫—Å—É": [52.046584, 76.918110],
        "–õ–∏—Å–∞–∫–æ–≤—Å–∫": [52.548712, 62.497317],
        "–ñ–∏—Ç–∏–∫–∞—Ä–∞": [52.183928, 61.189833],
        "–ö–æ–Ω–∞–µ–≤": [43.854849, 77.061581],
        "–ö–∞–Ω–¥–∞–≥–∞—à": [48.487661, 57.595688]
    };

    ymaps.ready(initMap);

    function initMap() {
        const defaultCity = document.getElementById("city").value;
        map = new ymaps.Map("map", {
            center: cityCenters[defaultCity],
            zoom: 10
        });

        map.events.add("click", function (e) {
            const coords = e.get("coords");
            if (placemark) {
                placemark.geometry.setCoordinates(coords);
            } else {
                placemark = createPlacemark(coords);
                map.geoObjects.add(placemark);
            }
            getAddress(coords);
        });

        document.getElementById("city").addEventListener("change", function () {
            const selectedCity = this.value;
            if (cityCenters[selectedCity]) {
                map.setCenter(cityCenters[selectedCity], 10);
            }
        });
    }

    function createPlacemark(coords) {
        return new ymaps.Placemark(coords, {}, {
            preset: "islands#blueDotIcon",
            draggable: false
        });
    }

    function getAddress(coords) {
        ymaps.geocode(coords).then(function (res) {
            const firstGeoObject = res.geoObjects.get(0);
            const address = firstGeoObject.getAddressLine();

            document.getElementById("address").value = address;
            document.getElementById("coordinates").value = coords.join(", ");

            const preview = document.getElementById("selected-address");
            if (preview) {
                preview.innerText = '–í—ã–±—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: ' + address;
            }

            const confirmation = document.getElementById("confirmation");
            if (confirmation) {
                confirmation.classList.remove("hidden");
                setTimeout(() => {
                    confirmation.classList.add("hidden");
                }, 3000);
            }
        });
    }

    document.getElementById("submissionForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const address = document.getElementById("address").value.trim();
        const coordinates = document.getElementById("coordinates").value.trim();

        if (address === "" || coordinates === "") {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è, –≤–∫–ª—é—á–∞—è '–ê–¥—Ä–µ—Å –¥–æ–º–∞' –∏ '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã'.");
            return;
        }

        const formData = new FormData(event.target);

        try {
            const response = await fetch("https://script.google.com/macros/s/AKfycbwAj5jmO20rc5_0ZjvgaVlBUc2pmnNFbh4NdhjIvknYZR_ByQI_QI2aNBjLPWhrkn1Ltg/exec", {
                method: "POST",
                body: formData,
            });

            const result = await response.text();
            alert(result);
            resetForm();

        } catch (error) {
            console.error("–û—à–∏–±–∫–∞:", error);
            alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.");
        }
    });

    function resetForm() {
        document.getElementById("submissionForm").reset();
        if (placemark) {
            map.geoObjects.remove(placemark);
        }

        const preview = document.getElementById("selected-address");
        if (preview) preview.innerText = '–ê–¥—Ä–µ—Å –Ω–µ –≤—ã–±—Ä–∞–Ω';

        const confirmation = document.getElementById("confirmation");
        if (confirmation) confirmation.classList.add("hidden");
    }

    // üîí –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–≤–æ–¥–∞

    // –§–ò–û ‚Äî —Ç–æ–ª—å–∫–æ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ –∏ –∫–∞–∑–∞—Ö—Å–∫–∏–µ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª –∏ –¥–µ—Ñ–∏—Å
    document.getElementById("name").addEventListener("input", function () {
        this.value = this.value.replace(/[^–ê-–Ø–∞-—è–Å—ë”ò”ô”®”©“ö“õ“¢“£“∞“±“Æ“Ø“∫“ª–Ü—ñ\s\-]/g, '');
    });

    // –¢–µ–ª–µ—Ñ–æ–Ω ‚Äî —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    document.getElementById("phone").addEventListener("input", function () {
        this.value = this.value.replace(/[^\d]/g, '');
    });
});
